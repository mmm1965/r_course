install.packages('tinytex')
tinytex::install_tinytex()
popular_packs <- c('babel-russian', 'cyrillic', 'cm-super',
'lh', 'makecmds', 'polyglossia', 'ulem',
'siunitx', 'multirow', 'xcolor', 'colortbl')
tinytex::tlmgr_install(popular_packs)
popular_packs <- c('babel-russian', 'cyrillic', 'cm-super',
'lh', 'makecmds', 'polyglossia', 'ulem',
'siunitx', 'multirow', 'xcolor', 'colortbl')
tinytex::tlmgr_install(popular_packs)
devtools::install_github('bdemeshev/azbuka')
devtools::install_github('bdemeshev/azbuka')
devtools::install_github('bdemeshev/azbuka')
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
library(tidyverse) # манипуляции с данными и графики
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(huxtable) # красивые таблицы
library(texreg) # ещё таблицы
library(estimatr) # диагностика линейных моделей с робастными ошибками
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_r_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Pulse1)
model_ur_rob <- lm_robust(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
texreg(list(model_r_rob, model_ur_rob), include.ci = FALSE, caption = '\\label{tab:models} Сравнение ограниченной и неограниченной моделей')
popular_packs <- c('babel-russian', 'cyrillic', 'cm-super',
'lh', 'makecmds', 'polyglossia', 'ulem',
'siunitx', 'multirow', 'xcolor', 'colortbl')
tinytex::tlmgr_install(popular_packs)
devtools::install_github('bdemeshev/azbuka')
library(tidyverse) # манипуляции с данными и графики
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(huxtable) # красивые таблицы
library(texreg) # ещё таблицы
library(estimatr) # диагностика линейных моделей с робастными ошибками
install.packages(c("ISLR", "caret", "FFTrees"))
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(Ecdat) # много-много разных наборов данных
library(ISLR) # ещё данные
library(caret) # пакет для подбора параметров разных моделей
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
library(ggeffects) # графики для предельных эффектов
library(MLmetrics) # метрики качества
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
install.packages(c("tidyverse", "skimr", "rio", "broom", "Ecdat", "ISLR", "sandwich", "caret", "FFTrees", "margins", "rpart.plot", "plotROC", "ggeffects", "MLmetrics"))
setwd("C:/Users/ASUS/Desktop/r_course")
educ <- import('data/xAPI-Edu-Data.csv')
skim(educ)
glimpse(educ)
educ <- import('data/xAPI-Edu-Data.csv')
skim(educ)
glimpse(educ)
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(Ecdat) # много-много разных наборов данных
library(ISLR) # ещё данные
library(sandwich) # оценка Var для гетероскедастичности
library(caret) # пакет для подбора параметров разных моделей
install.packages("caret")
library(caret) # пакет для подбора параметров разных моделей
library(FFTrees) # быстрые деревья
library(margins) # для подсчёта предельных эффектов
library(rpart.plot) # для картинок деревьев
library(plotROC) # визуализация ROC-кривой
library(ggeffects) # графики для предельных эффектов
library(MLmetrics) # метрики качества
educ <- import('data/xAPI-Edu-Data.csv')
skim(educ)
glimpse(educ)
educ_logit <- mutate(educ, y = fct_collapse(Class, H = c('M', 'H')))
educ_fct <- mutate_if(educ_logit, is.character, factor)
educ_logit <- mutate(educ, y = fct_collapse(Class, H = c('M', 'H')))
educ_fct <- mutate_if(educ_logit, is.character, factor)
educ_fct <- mutate_if(educ_logit, is.character, factor)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
set.seed(777)
train_rows <- createDataPartition(educ_fct$y, p = 0.8, list = FALSE)
train_rows
educ_train <- educ_fct[train_rows, ]
educ_test <- educ_fct[-train_rows, ]
glimpse(educ_fct)
educ_train <- educ_fct[train_rows, ]
educ_test <- educ_fct[-train_rows, ]
glimpse(educ_fct)
educ_lmodel_glm <- glm(data = educ_train, y ~ gender + SectionID + raisedhands, family = binomial(link = 'logit'))
summary(educ_lmodel_glm)
educ_lmodel_glm <- glm(data = educ_train, y ~ gender + SectionID + raisedhands, family = binomial(link = 'logit'))
summary(educ_lmodel_glm)
